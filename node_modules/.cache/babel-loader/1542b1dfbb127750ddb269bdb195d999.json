{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-eccomerce-main\\\\src\\\\Context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Products: storeProducts,\n      detailProduct: detailProduct,\n      cart: JSON.parse(localStorage.getItem('cart')) || [],\n      // cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.componentDidMount = () => {\n      this.setProducts();\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n\n        if (localStorage.getItem('cart') !== null) {\n          let getCartLocalStorage = JSON.parse(localStorage.getItem('cart'));\n          getCartLocalStorage.forEach(items => {\n            // console.log(singleItem);\n            if (singleItem.id === items.id) {\n              singleItem.inCart = true;\n              console.log(singleItem.inCart);\n            }\n          });\n        }\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.addTotals();\n      this.setState(() => {\n        return {\n          Products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const Product = this.state.Products.find(item => item.id === id);\n      return Product;\n    };\n\n    this.handleDetail = id => {\n      const Product = this.getItem(id);\n      console.log(Product);\n      this.setState(() => {\n        return {\n          detailProduct: Product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.Products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const Product = tempProducts[index];\n      Product.inCart = true;\n      Product.count = 1;\n      const giaBan = Product.giaBan;\n      Product.total = giaBan;\n\n      const Swal = require('sweetalert2');\n\n      Swal.fire({\n        text: 'Sản phẩm đã được thêm vào giỏ!',\n        icon: 'Thành công'\n      });\n      this.setState(() => {\n        // localStorage.setItem('cart', json.stringify()));\n        localStorage.setItem('cart', JSON.stringify([...this.state.cart, Product]));\n        return {\n          Products: tempProducts,\n          cart: [...this.state.cart, Product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const Product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: Product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = id => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increase = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const Product = tempCart[index];\n      Product.count = Product.count + 1;\n      Product.total = Product.count * Product.giaBan;\n      this.setState(() => {\n        localStorage.setItem('cart', JSON.stringify([...tempCart]));\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrease = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const Product = tempCart[index];\n      Product.count = Product.count - 1;\n\n      if (Product.count === 0) {\n        this.removeItem(id);\n      } else {\n        Product.total = Product.count * Product.giaBan;\n        this.setState(() => {\n          localStorage.setItem('cart', JSON.stringify([...tempCart]));\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      console.log(id);\n      let tempProducts = [...this.state.Products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removeProduct = tempProducts[index];\n      removeProduct.inCart = false;\n      removeProduct.count = 0;\n      removeProduct.total = 0;\n      Swal.fire({\n        text: 'Sản phẩm đã được xóa khỏi giỏ!',\n        icon: 'Thành công'\n      });\n      this.setState(() => {\n        localStorage.setItem('cart', JSON.stringify([...tempCart]));\n        return {\n          cart: [...tempCart],\n          Products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      Swal.fire({\n        text: 'Sản phẩm đã được thêm vào giỏ!',\n        icon: 'Thành công'\n      });\n      localStorage.removeItem('cart');\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subtotal = 0;\n      this.state.cart.map(item => subtotal += item.total);\n      const tempTax = subtotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subtotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subtotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increase: this.increase,\n        decrease: this.decrease,\n        clearCart: this.clearCart,\n        removeItem: this.removeItem\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react-eccomerce-main/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","Swal","ProductContext","createContext","ProductProvider","state","Products","cart","JSON","parse","localStorage","getItem","modalOpen","modalProduct","cartSubtotal","cartTax","cartTotal","componentDidMount","setProducts","tempProducts","forEach","item","singleItem","getCartLocalStorage","items","id","inCart","console","log","addTotals","setState","Product","find","handleDetail","addToCart","index","indexOf","count","giaBan","total","require","fire","text","icon","setItem","stringify","openModal","closeModal","increase","tempCart","selectedProduct","decrease","removeItem","filter","removeProduct","clearCart","subtotal","map","tempTax","tax","parseFloat","toFixed","render","props","children","ProductConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,EAAsBC,aAAtB,QAA0C,QAA1C;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,cAAc,gBAAGL,KAAK,CAACM,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCO,KAFoC,GAE5B;AACJC,MAAAA,QAAQ,EAAGP,aADP;AAEJC,MAAAA,aAAa,EAAGA,aAFZ;AAGJO,MAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAH9C;AAIJ;AACAC,MAAAA,SAAS,EAAG,KALR;AAMJC,MAAAA,YAAY,EAAGb,aANX;AAOJc,MAAAA,YAAY,EAAG,CAPX;AAQJC,MAAAA,OAAO,EAAG,CARN;AASJC,MAAAA,SAAS,EAAG;AATR,KAF4B;;AAAA,SAcpCC,iBAdoC,GAchB,MAAM;AACtB,WAAKC,WAAL;AACH,KAhBmC;;AAAA,SAkBpCA,WAlBoC,GAkBtB,MAAM;AAChB,UAAIC,YAAY,GAAG,EAAnB;AACApB,MAAAA,aAAa,CAACqB,OAAd,CAAsBC,IAAI,IAAI;AAC1B,cAAMC,UAAU,GAAG,EAAC,GAAGD;AAAJ,SAAnB;;AACA,YAAIX,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAArC,EAA2C;AACvC,cAAIY,mBAAmB,GAAGf,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA1B;AACAY,UAAAA,mBAAmB,CAACH,OAApB,CAA4BI,KAAK,IAAI;AACjC;AACA,gBAAIF,UAAU,CAACG,EAAX,KAAkBD,KAAK,CAACC,EAA5B,EACA;AACIH,cAAAA,UAAU,CAACI,MAAX,GAAoB,IAApB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYN,UAAU,CAACI,MAAvB;AACH;AACJ,WAPD;AAQH;;AACDP,QAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAiBG,UAAjB,CAAf;AACH,OAdD;AAgBA,WAAKO,SAAL;AAEA,WAAKC,QAAL,CAAc,MAAM;AAChB,eAAO;AAAExB,UAAAA,QAAQ,EAAEa;AAAZ,SAAP;AACH,OAFD;AAIH,KA1CmC;;AAAA,SA4CpCR,OA5CoC,GA4CzBc,EAAD,IAAQ;AACd,YAAMM,OAAO,GAAG,KAAK1B,KAAL,CAAWC,QAAX,CAAoB0B,IAApB,CAAyBX,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAWA,EAA5C,CAAhB;AACA,aAAOM,OAAP;AACH,KA/CmC;;AAAA,SAiDpCE,YAjDoC,GAiDpBR,EAAD,IAAQ;AACnB,YAAMM,OAAO,GAAG,KAAKpB,OAAL,CAAac,EAAb,CAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,WAAKD,QAAL,CAAc,MAAI;AACd,eAAO;AAAE9B,UAAAA,aAAa,EAAC+B;AAAhB,SAAP;AACH,OAFD;AAGH,KAvDmC;;AAAA,SAyDpCG,SAzDoC,GAyDvBT,EAAD,IAAQ;AAChB,UAAIN,YAAY,GAAG,CAAC,GAAG,KAAKd,KAAL,CAAWC,QAAf,CAAnB;AACA,YAAM6B,KAAK,GAAGhB,YAAY,CAACiB,OAAb,CAAqB,KAAKzB,OAAL,CAAac,EAAb,CAArB,CAAd;AACA,YAAMM,OAAO,GAAGZ,YAAY,CAACgB,KAAD,CAA5B;AACAJ,MAAAA,OAAO,CAACL,MAAR,GAAiB,IAAjB;AACAK,MAAAA,OAAO,CAACM,KAAR,GAAgB,CAAhB;AACA,YAAOC,MAAM,GAAGP,OAAO,CAACO,MAAxB;AACAP,MAAAA,OAAO,CAACQ,KAAR,GAAgBD,MAAhB;;AAEA,YAAMrC,IAAI,GAAGuC,OAAO,CAAC,aAAD,CAApB;;AACAvC,MAAAA,IAAI,CAACwC,IAAL,CAAU;AACNC,QAAAA,IAAI,EAAE,gCADA;AAENC,QAAAA,IAAI,EAAE;AAFA,OAAV;AAIA,WAAKb,QAAL,CAAc,MAAI;AACd;AACApB,QAAAA,YAAY,CAACkC,OAAb,CAAqB,MAArB,EAA6BpC,IAAI,CAACqC,SAAL,CAAe,CAAC,GAAG,KAAKxC,KAAL,CAAWE,IAAf,EAAqBwB,OAArB,CAAf,CAA7B;AACA,eAAO;AAACzB,UAAAA,QAAQ,EAACa,YAAV;AAAwBZ,UAAAA,IAAI,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAoBwB,OAApB;AAA9B,SAAP;AACH,OAJD,EAKA,MAAI;AACA,aAAKF,SAAL;AACH,OAPD;AAQH,KA/EmC;;AAAA,SAiFpCiB,SAjFoC,GAiFvBrB,EAAD,IAAQ;AAChB,YAAMM,OAAO,GAAG,KAAKpB,OAAL,CAAac,EAAb,CAAhB;AACA,WAAKK,QAAL,CAAc,MAAI;AACd,eAAO;AAACjB,UAAAA,YAAY,EAACkB,OAAd;AAAsBnB,UAAAA,SAAS,EAAC;AAAhC,SAAP;AACH,OAFD;AAGH,KAtFmC;;AAAA,SAwFpCmC,UAxFoC,GAwFtBtB,EAAD,IAAQ;AACjB,WAAKK,QAAL,CAAc,MAAI;AACd,eAAO;AAAClB,UAAAA,SAAS,EAAC;AAAX,SAAP;AACH,OAFD;AAGH,KA5FmC;;AAAA,SA8FpCoC,QA9FoC,GA8FxBvB,EAAD,IAAQ;AACf,UAAIwB,QAAQ,GAAG,CAAC,GAAG,KAAK5C,KAAL,CAAWE,IAAf,CAAf;AACA,YAAM2C,eAAe,GAAGD,QAAQ,CAACjB,IAAT,CAAcX,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAAlC,CAAxB;AACA,YAAMU,KAAK,GAAGc,QAAQ,CAACb,OAAT,CAAiBc,eAAjB,CAAd;AACA,YAAMnB,OAAO,GAAGkB,QAAQ,CAACd,KAAD,CAAxB;AACAJ,MAAAA,OAAO,CAACM,KAAR,GAAgBN,OAAO,CAACM,KAAR,GAAgB,CAAhC;AACAN,MAAAA,OAAO,CAACQ,KAAR,GAAgBR,OAAO,CAACM,KAAR,GAAgBN,OAAO,CAACO,MAAxC;AAEA,WAAKR,QAAL,CAAc,MAAI;AACdpB,QAAAA,YAAY,CAACkC,OAAb,CAAqB,MAArB,EAA6BpC,IAAI,CAACqC,SAAL,CAAe,CAAC,GAAGI,QAAJ,CAAf,CAA7B;AAEA,eAAO;AACH1C,UAAAA,IAAI,EAAG,CAAC,GAAG0C,QAAJ;AADJ,SAAP;AAGH,OAND,EAOA,MAAI;AACA,aAAKpB,SAAL;AACH,OATD;AAUH,KAhHmC;;AAAA,SAkHpCsB,QAlHoC,GAkHxB1B,EAAD,IAAQ;AACf,UAAIwB,QAAQ,GAAG,CAAC,GAAG,KAAK5C,KAAL,CAAWE,IAAf,CAAf;AACA,YAAM2C,eAAe,GAAGD,QAAQ,CAACjB,IAAT,CAAcX,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAAlC,CAAxB;AACA,YAAMU,KAAK,GAAGc,QAAQ,CAACb,OAAT,CAAiBc,eAAjB,CAAd;AACA,YAAMnB,OAAO,GAAGkB,QAAQ,CAACd,KAAD,CAAxB;AACAJ,MAAAA,OAAO,CAACM,KAAR,GAAgBN,OAAO,CAACM,KAAR,GAAgB,CAAhC;;AACA,UAAGN,OAAO,CAACM,KAAR,KAAgB,CAAnB,EACA;AACI,aAAKe,UAAL,CAAgB3B,EAAhB;AACH,OAHD,MAII;AACAM,QAAAA,OAAO,CAACQ,KAAR,GAAgBR,OAAO,CAACM,KAAR,GAAgBN,OAAO,CAACO,MAAxC;AACA,aAAKR,QAAL,CAAc,MAAM;AAChBpB,UAAAA,YAAY,CAACkC,OAAb,CAAqB,MAArB,EAA6BpC,IAAI,CAACqC,SAAL,CAAe,CAAC,GAAGI,QAAJ,CAAf,CAA7B;AACA,iBAAO;AACH1C,YAAAA,IAAI,EAAE,CAAC,GAAG0C,QAAJ;AADH,WAAP;AAGH,SALD,EAMI,MAAM;AACF,eAAKpB,SAAL;AACH,SARL;AASH;AAGJ,KA1ImC;;AAAA,SA4IpCuB,UA5IoC,GA4ItB3B,EAAD,IAAQ;AACjBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,UAAIN,YAAY,GAAG,CAAC,GAAG,KAAKd,KAAL,CAAWC,QAAf,CAAnB;AACA,UAAI2C,QAAQ,GAAG,CAAC,GAAG,KAAK5C,KAAL,CAAWE,IAAf,CAAf;AACA0C,MAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgBhC,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAApC,CAAX;AAEA,YAAMU,KAAK,GAAGhB,YAAY,CAACiB,OAAb,CAAqB,KAAKzB,OAAL,CAAac,EAAb,CAArB,CAAd;AACA,UAAI6B,aAAa,GAAGnC,YAAY,CAACgB,KAAD,CAAhC;AACAmB,MAAAA,aAAa,CAAC5B,MAAd,GAAuB,KAAvB;AACA4B,MAAAA,aAAa,CAACjB,KAAd,GAAsB,CAAtB;AACAiB,MAAAA,aAAa,CAACf,KAAd,GAAsB,CAAtB;AAEAtC,MAAAA,IAAI,CAACwC,IAAL,CAAU;AACNC,QAAAA,IAAI,EAAE,gCADA;AAENC,QAAAA,IAAI,EAAE;AAFA,OAAV;AAKA,WAAKb,QAAL,CAAc,MAAI;AACdpB,QAAAA,YAAY,CAACkC,OAAb,CAAqB,MAArB,EAA6BpC,IAAI,CAACqC,SAAL,CAAe,CAAC,GAAGI,QAAJ,CAAf,CAA7B;AACA,eAAO;AACH1C,UAAAA,IAAI,EAAG,CAAC,GAAG0C,QAAJ,CADJ;AAEH3C,UAAAA,QAAQ,EAAG,CAAC,GAAGa,YAAJ;AAFR,SAAP;AAIH,OAND,EAOA,MAAI;AACA,aAAKU,SAAL;AACH,OATD;AAUH,KAvKmC;;AAAA,SAyKpC0B,SAzKoC,GAyKxB,MAAM;AACdtD,MAAAA,IAAI,CAACwC,IAAL,CAAU;AACNC,QAAAA,IAAI,EAAE,gCADA;AAENC,QAAAA,IAAI,EAAE;AAFA,OAAV;AAIAjC,MAAAA,YAAY,CAAC0C,UAAb,CAAwB,MAAxB;AACA,WAAKtB,QAAL,CAAc,MAAI;AACd,eAAO;AACHvB,UAAAA,IAAI,EAAG;AADJ,SAAP;AAGH,OAJD,EAIE,MAAI;AACF,aAAKW,WAAL;AACA,aAAKW,SAAL;AACH,OAPD;AAQH,KAvLmC;;AAAA,SAyLpCA,SAzLoC,GAyLxB,MAAK;AACb,UAAI2B,QAAQ,GAAG,CAAf;AACA,WAAKnD,KAAL,CAAWE,IAAX,CAAgBkD,GAAhB,CAAoBpC,IAAI,IAAGmC,QAAQ,IAAEnC,IAAI,CAACkB,KAA1C;AACA,YAAMmB,OAAO,GAAGF,QAAQ,GAAG,GAA3B;AACA,YAAMG,GAAG,GAAGC,UAAU,CAACF,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAD,CAAtB;AACA,YAAMtB,KAAK,GAAGiB,QAAQ,GAAGG,GAAzB;AACA,WAAK7B,QAAL,CAAc,MAAI;AACd,eAAO;AACHhB,UAAAA,YAAY,EAAE0C,QADX;AAEHzC,UAAAA,OAAO,EAAE4C,GAFN;AAGH3C,UAAAA,SAAS,EAAEuB;AAHR,SAAP;AAKH,OAND;AAOH,KAtMmC;AAAA;;AAwMpCuB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EACxB,GAAG,KAAKzD,KADgB;AAExB4B,QAAAA,YAAY,EAAE,KAAKA,YAFK;AAGxBC,QAAAA,SAAS,EAAE,KAAKA,SAHQ;AAIxBY,QAAAA,SAAS,EAAG,KAAKA,SAJO;AAKxBC,QAAAA,UAAU,EAAG,KAAKA,UALM;AAMxBC,QAAAA,QAAQ,EAAE,KAAKA,QANS;AAOxBG,QAAAA,QAAQ,EAAE,KAAKA,QAPS;AAQxBI,QAAAA,SAAS,EAAE,KAAKA,SARQ;AASxBH,QAAAA,UAAU,EAAE,KAAKA;AATO,OAAhC;AAAA,gBAWK,KAAKW,KAAL,CAAWC;AAXhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAxNmC;;AA2NxC,MAAMC,eAAe,GAAG/D,cAAc,CAACgE,QAAvC;AAEA,SAAQ9D,eAAR,EAAwB6D,eAAxB","sourcesContent":["import React, { Component } from 'react';\nimport {storeProducts,detailProduct} from './data';\nimport Swal from 'sweetalert2';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n\n    state = {\n        Products : storeProducts,\n        detailProduct : detailProduct,\n        cart: JSON.parse(localStorage.getItem('cart')) || [],\n        // cart: [],\n        modalOpen : false,\n        modalProduct : detailProduct,\n        cartSubtotal : 0,\n        cartTax : 0,\n        cartTotal : 0,\n    }\n\n    componentDidMount = () => {\n        this.setProducts();\n    }\n\n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            if (localStorage.getItem('cart') !== null) {\n                let getCartLocalStorage = JSON.parse(localStorage.getItem('cart'));\n                getCartLocalStorage.forEach(items => {\n                    // console.log(singleItem);\n                    if (singleItem.id === items.id)\n                    {\n                        singleItem.inCart = true;\n                        console.log(singleItem.inCart);\n                    }\n                })\n            }\n            tempProducts = [...tempProducts,singleItem];\n        });\n\n        this.addTotals();\n\n        this.setState(() => {\n            return { Products: tempProducts };\n        });\n\n    }\n\n    getItem = (id) => {\n        const Product = this.state.Products.find(item => item.id ===id );\n        return Product;\n    }\n\n    handleDetail = (id) => {\n        const Product = this.getItem(id);\n        console.log(Product);\n        this.setState(()=>{\n            return { detailProduct:Product}\n        })\n    }\n\n    addToCart = (id) => {\n        let tempProducts = [...this.state.Products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const Product = tempProducts[index];\n        Product.inCart = true;\n        Product.count = 1;\n        const  giaBan = Product.giaBan;\n        Product.total = giaBan;\n\n        const Swal = require('sweetalert2');\n        Swal.fire({\n            text: 'Sản phẩm đã được thêm vào giỏ!',\n            icon: 'Thành công'\n        })\n        this.setState(()=>{\n            // localStorage.setItem('cart', json.stringify()));\n            localStorage.setItem('cart', JSON.stringify([...this.state.cart, Product]));\n            return {Products:tempProducts, cart: [...this.state.cart,Product]};\n        },\n        ()=>{\n            this.addTotals();\n        });\n    }\n\n    openModal = (id) => {\n        const Product = this.getItem(id);\n        this.setState(()=>{\n            return {modalProduct:Product,modalOpen:true};\n        })\n    }\n\n    closeModal = (id) => {\n        this.setState(()=>{\n            return {modalOpen:false}\n        })\n    }\n\n    increase = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const Product = tempCart[index];\n        Product.count = Product.count + 1;\n        Product.total = Product.count * Product.giaBan;\n\n        this.setState(()=>{\n            localStorage.setItem('cart', JSON.stringify([...tempCart]));\n\n            return {\n                cart : [...tempCart]\n            }\n        },\n        ()=>{\n            this.addTotals();\n        })\n    }\n\n    decrease = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const Product = tempCart[index];\n        Product.count = Product.count - 1;\n        if(Product.count===0)\n        {\n            this.removeItem(id);\n        }\n        else{\n            Product.total = Product.count * Product.giaBan;\n            this.setState(() => {\n                localStorage.setItem('cart', JSON.stringify([...tempCart]));\n                return {\n                    cart: [...tempCart]\n                }\n            },\n                () => {\n                    this.addTotals();\n                })\n        }\n\n        \n    }\n\n    removeItem = (id) => {\n        console.log(id);\n        let tempProducts = [...this.state.Products];\n        let tempCart = [...this.state.cart];\n        tempCart = tempCart.filter(item => item.id !== id);\n\n        const index = tempProducts.indexOf(this.getItem(id));\n        let removeProduct = tempProducts[index];\n        removeProduct.inCart = false;\n        removeProduct.count = 0;\n        removeProduct.total = 0;\n\n        Swal.fire({\n            text: 'Sản phẩm đã được xóa khỏi giỏ!',\n            icon: 'Thành công'\n           \n        })\n        this.setState(()=>{\n            localStorage.setItem('cart', JSON.stringify([...tempCart]));\n            return {\n                cart : [...tempCart],\n                Products : [...tempProducts],\n            }\n        },\n        ()=>{\n            this.addTotals();\n        })\n    }\n\n    clearCart = () => {\n        Swal.fire({\n            text: 'Sản phẩm đã được thêm vào giỏ!',\n            icon: 'Thành công'\n        })\n        localStorage.removeItem('cart');\n        this.setState(()=>{\n            return {\n                cart : []\n            }\n        },()=>{\n            this.setProducts();\n            this.addTotals();\n        })\n    }\n\n    addTotals = () =>{\n        let subtotal = 0;\n        this.state.cart.map(item=>(subtotal+=item.total));\n        const tempTax = subtotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subtotal + tax;\n        this.setState(()=>{\n            return {\n                cartSubtotal: subtotal,\n                cartTax: tax,\n                cartTotal: total,\n            }\n        })\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                    ...this.state,\n                    handleDetail: this.handleDetail,\n                    addToCart: this.addToCart,\n                    openModal : this.openModal,\n                    closeModal : this.closeModal,\n                    increase: this.increase,\n                    decrease: this.decrease,\n                    clearCart: this.clearCart,\n                    removeItem: this.removeItem,\n                }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider,ProductConsumer};"]},"metadata":{},"sourceType":"module"}