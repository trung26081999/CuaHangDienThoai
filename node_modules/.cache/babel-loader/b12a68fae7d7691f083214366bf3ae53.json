{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react-eccomerce-main\\\\src\\\\Context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProdukContext = /*#__PURE__*/React.createContext();\n\nclass ProdukProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      produks: storeProducts,\n      detailProduk: detailProduct,\n      cart: JSON.parse(localStorage.getItem('cart')) || [],\n      // cart: [],\n      modalOpen: false,\n      modalProduk: detailProduct,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.componentDidMount = () => {\n      this.setProduks();\n    };\n\n    this.setProduks = () => {\n      let tempProduks = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n\n        if (localStorage.getItem('cart') !== null) {\n          let getCartLocalStorage = JSON.parse(localStorage.getItem('cart'));\n          getCartLocalStorage.forEach(items => {\n            // console.log(singleItem);\n            if (singleItem.id === items.id) {\n              singleItem.inCart = true;\n              console.log(singleItem.inCart);\n            }\n          });\n        }\n\n        tempProduks = [...tempProduks, singleItem];\n      });\n      this.addTotals();\n      this.setState(() => {\n        return {\n          produks: tempProduks\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const produk = this.state.produks.find(item => item.id === id);\n      return produk;\n    };\n\n    this.handleDetail = id => {\n      const produk = this.getItem(id);\n      console.log(produk);\n      this.setState(() => {\n        return {\n          detailProduk: produk\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProduks = [...this.state.produks];\n      const index = tempProduks.indexOf(this.getItem(id));\n      const produk = tempProduks[index];\n      produk.inCart = true;\n      produk.count = 1;\n      const giaBan = produk.giaBan;\n      produk.total = giaBan;\n\n      const Swal = require('sweetalert2');\n\n      Swal.fire({\n        text: 'Produk berhasil ditambahkan ke keranjang!',\n        icon: 'success'\n      });\n      this.setState(() => {\n        // localStorage.setItem('cart', json.stringify()));\n        localStorage.setItem('cart', JSON.stringify([...this.state.cart, produk]));\n        return {\n          produks: tempProduks,\n          cart: [...this.state.cart, produk]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const produk = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduk: produk,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = id => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increase = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduk = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduk);\n      const produk = tempCart[index];\n      produk.count = produk.count + 1;\n      produk.total = produk.count * produk.giaBan;\n      this.setState(() => {\n        localStorage.setItem('cart', JSON.stringify([...tempCart]));\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrease = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduk = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduk);\n      const produk = tempCart[index];\n      produk.count = produk.count - 1;\n\n      if (produk.count === 0) {\n        this.removeItem(id);\n      } else {\n        produk.total = produk.count * produk.giaBan;\n        this.setState(() => {\n          localStorage.setItem('cart', JSON.stringify([...tempCart]));\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      console.log(id);\n      let tempProduks = [...this.state.produks];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProduks.indexOf(this.getItem(id));\n      let removeProduk = tempProduks[index];\n      removeProduk.inCart = false;\n      removeProduk.count = 0;\n      removeProduk.total = 0;\n      Swal.fire({\n        text: 'Sản phẩm đã được thêm vào giỏ!',\n        icon: 'Thành công'\n      });\n      this.setState(() => {\n        localStorage.setItem('cart', JSON.stringify([...tempCart]));\n        return {\n          cart: [...tempCart],\n          produks: [...tempProduks]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      Swal.fire({\n        text: 'Keranjang berhasil dikosongkan!',\n        icon: 'success'\n      });\n      localStorage.removeItem('cart');\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProduks();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subtotal = 0;\n      this.state.cart.map(item => subtotal += item.total);\n      const tempTax = subtotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subtotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subtotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProdukContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increase: this.increase,\n        decrease: this.decrease,\n        clearCart: this.clearCart,\n        removeItem: this.removeItem\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProdukConsumer = ProdukContext.Consumer;\nexport { ProdukProvider, ProdukConsumer };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react-eccomerce-main/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","Swal","ProdukContext","createContext","ProdukProvider","state","produks","detailProduk","cart","JSON","parse","localStorage","getItem","modalOpen","modalProduk","cartSubtotal","cartTax","cartTotal","componentDidMount","setProduks","tempProduks","forEach","item","singleItem","getCartLocalStorage","items","id","inCart","console","log","addTotals","setState","produk","find","handleDetail","addToCart","index","indexOf","count","giaBan","total","require","fire","text","icon","setItem","stringify","openModal","closeModal","increase","tempCart","selectedProduk","decrease","removeItem","filter","removeProduk","clearCart","subtotal","map","tempTax","tax","parseFloat","toFixed","render","props","children","ProdukConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {storeProducts,detailProduct} from './data';\nimport Swal from 'sweetalert2';\n\nconst ProdukContext = React.createContext();\n\nclass ProdukProvider extends Component {\n\n    state = {\n        produks : storeProducts,\n        detailProduk : detailProduct,\n        cart: JSON.parse(localStorage.getItem('cart')) || [],\n        // cart: [],\n        modalOpen : false,\n        modalProduk : detailProduct,\n        cartSubtotal : 0,\n        cartTax : 0,\n        cartTotal : 0,\n    }\n\n    componentDidMount = () => {\n        this.setProduks();\n    }\n\n    setProduks = () => {\n        let tempProduks = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            if (localStorage.getItem('cart') !== null) {\n                let getCartLocalStorage = JSON.parse(localStorage.getItem('cart'));\n                getCartLocalStorage.forEach(items => {\n                    // console.log(singleItem);\n                    if (singleItem.id === items.id)\n                    {\n                        singleItem.inCart = true;\n                        console.log(singleItem.inCart);\n                    }\n                })\n            }\n            tempProduks = [...tempProduks,singleItem];\n        });\n\n        this.addTotals();\n\n        this.setState(() => {\n            return { produks: tempProduks };\n        });\n\n    }\n\n    getItem = (id) => {\n        const produk = this.state.produks.find(item => item.id ===id );\n        return produk;\n    }\n\n    handleDetail = (id) => {\n        const produk = this.getItem(id);\n        console.log(produk);\n        this.setState(()=>{\n            return { detailProduk:produk}\n        })\n    }\n\n    addToCart = (id) => {\n        let tempProduks = [...this.state.produks];\n        const index = tempProduks.indexOf(this.getItem(id));\n        const produk = tempProduks[index];\n        produk.inCart = true;\n        produk.count = 1;\n        const  giaBan = produk.giaBan;\n        produk.total = giaBan;\n\n        const Swal = require('sweetalert2');\n        Swal.fire({\n            text : 'Produk berhasil ditambahkan ke keranjang!',\n            icon: 'success'\n        })\n        this.setState(()=>{\n            // localStorage.setItem('cart', json.stringify()));\n            localStorage.setItem('cart', JSON.stringify([...this.state.cart, produk]));\n            return {produks:tempProduks, cart: [...this.state.cart,produk]};\n        },\n        ()=>{\n            this.addTotals();\n        });\n    }\n\n    openModal = (id) => {\n        const produk = this.getItem(id);\n        this.setState(()=>{\n            return {modalProduk:produk,modalOpen:true};\n        })\n    }\n\n    closeModal = (id) => {\n        this.setState(()=>{\n            return {modalOpen:false}\n        })\n    }\n\n    increase = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduk = tempCart.find(item => item.id === id);\n        const index = tempCart.indexOf(selectedProduk);\n        const produk = tempCart[index];\n        produk.count = produk.count + 1;\n        produk.total = produk.count * produk.giaBan;\n\n        this.setState(()=>{\n            localStorage.setItem('cart', JSON.stringify([...tempCart]));\n\n            return {\n                cart : [...tempCart]\n            }\n        },\n        ()=>{\n            this.addTotals();\n        })\n    }\n\n    decrease = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduk = tempCart.find(item => item.id === id);\n        const index = tempCart.indexOf(selectedProduk);\n        const produk = tempCart[index];\n        produk.count = produk.count - 1;\n        if(produk.count===0)\n        {\n            this.removeItem(id);\n        }\n        else{\n            produk.total = produk.count * produk.giaBan;\n            this.setState(() => {\n                localStorage.setItem('cart', JSON.stringify([...tempCart]));\n                return {\n                    cart: [...tempCart]\n                }\n            },\n                () => {\n                    this.addTotals();\n                })\n        }\n\n        \n    }\n\n    removeItem = (id) => {\n        console.log(id);\n        let tempProduks = [...this.state.produks];\n        let tempCart = [...this.state.cart];\n        tempCart = tempCart.filter(item => item.id !== id);\n\n        const index = tempProduks.indexOf(this.getItem(id));\n        let removeProduk = tempProduks[index];\n        removeProduk.inCart = false;\n        removeProduk.count = 0;\n        removeProduk.total = 0;\n\n        Swal.fire({\n            text: 'Sản phẩm đã được thêm vào giỏ!',\n            icon: 'Thành công'\n        })\n        this.setState(()=>{\n            localStorage.setItem('cart', JSON.stringify([...tempCart]));\n            return {\n                cart : [...tempCart],\n                produks : [...tempProduks],\n            }\n        },\n        ()=>{\n            this.addTotals();\n        })\n    }\n\n    clearCart = () => {\n        Swal.fire({\n            text: 'Keranjang berhasil dikosongkan!',\n            icon: 'success'\n        })\n        localStorage.removeItem('cart');\n        this.setState(()=>{\n            return {\n                cart : []\n            }\n        },()=>{\n            this.setProduks();\n            this.addTotals();\n        })\n    }\n\n    addTotals = () =>{\n        let subtotal = 0;\n        this.state.cart.map(item=>(subtotal+=item.total));\n        const tempTax = subtotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subtotal + tax;\n        this.setState(()=>{\n            return {\n                cartSubtotal: subtotal,\n                cartTax: tax,\n                cartTotal: total,\n            }\n        })\n    }\n\n    render() {\n        return (\n            <ProdukContext.Provider value={{\n                    ...this.state,\n                    handleDetail: this.handleDetail,\n                    addToCart: this.addToCart,\n                    openModal : this.openModal,\n                    closeModal : this.closeModal,\n                    increase: this.increase,\n                    decrease: this.decrease,\n                    clearCart: this.clearCart,\n                    removeItem: this.removeItem,\n                }}>\n                {this.props.children}\n            </ProdukContext.Provider>\n        );\n    }\n}\n\nconst ProdukConsumer = ProdukContext.Consumer;\n\nexport {ProdukProvider,ProdukConsumer};"]},"metadata":{},"sourceType":"module"}